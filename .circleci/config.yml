# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

jobs: 
  Build:  # Job Name
    docker:  # in this example will built our code in docker container, however you can use linux, macOS, etc..
      - image: cimg/python:3.11.3  # Spcecify The python image.
    steps:  # Job Steps
      - checkout  # checkout code from GitHub
      - run: python --version  # print out python version
      - run:
          name: "Build Python app"
          command: |
            cd python
            python3 main.py


  Scan_Build:  # Job Name
    docker:  # in this example will built our code in docker container, however you can use linux, macOS, etc..
      - image: cimg/python:3.11.3  # Spcecify The python image.
    steps:  # Job Steps
      - checkout  # checkout code from GitHub
      - run: python --version  # print out python version
      - run:
          name: "Scan Python app"
          command: |
            cd python
            python3 main_scan.py
            
  Deploy:  # Job Name
    docker:  # in this example will built our code in docker container, however you can use linux, macOS, etc..
      - image: cimg/python:3.11.3  # Spcecify The python image.
    steps:  # Job Steps
      - checkout  # checkout code from GitHub
      - run: python --version  # print out python version
      - run:
          name: "Build Python app"
          command: |
            cd python
            python3 main.py 

  Scan_Deploy:  # Job Name
    docker:  # in this example will built our code in docker container, however you can use linux, macOS, etc..
      - image: cimg/python:3.11.3  # Spcecify The python image.
    steps:  # Job Steps
      - checkout  # checkout code from GitHub
      - run: python --version  # print out python version
      - run:
          name: "Scan Python app"
          command: |
            cd python
            python3 main_scan.py

            
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  default:
    jobs:
      - Build

      - Scan_Build:
          requires: [Build]

      - hold:
          type: approval
          requires: [Scan_Build]

      - Deploy:
          requires: [hold]

      - Scan_Deploy:
<<<<<<< HEAD
          requires: [Deploy, Scan_Build]
#
=======
          requires: [Deploy]
          #filters:
          #  branches:
          #    only: [master]

>>>>>>> 5a7a95d026d6471811677d9e578dbc3c69c76aa1
      
